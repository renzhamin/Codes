/// Task1
#include <bits/stdc++.h>
#define ll long long 
using namespace std;

int n;

void p(int cur){
    if(cur>n) return;
    cout<<cur<<" ";
    p(cur+2);
}

int main(){
    cin>>n;
    p(0);
}

////

/// Task2

#include <bits/stdc++.h>
#define ll long long 
using namespace std;


ll superdigits(string s){
    int n=s.length();
    ll sum=0;
    for(int i=0;i<n;i++)     
        sum+=s[i]-'0';
    return sum;
}

string solve(string cur){
    if(cur.length()==1) return cur;
    return solve(to_string(superdigits(cur)));
}

int main(){
    string n;    
    ll k;
    cin>>n>>k;
    string ans=solve(to_string(superdigits(n)*k));
    cout<<ans<<"\n";
}


////


/// Task3

#include <bits/stdc++.h>
#define ll long long 
using namespace std;

ll mem[40];

ll fib(ll n){
    if(n<0) return 0;
    if(mem[n]!=-1) return mem[n];
    return mem[n]=fib(n-1)+fib(n-2)+fib(n-3);
}

int main(){
    memset(mem,-1,sizeof(mem));
    mem[1]=mem[2]=1;
    mem[0]=0;
    ll n; cin>>n;
    cout<<fib(n)<<"\n";
}

////


// Task4
#include <bits/stdc++.h>
#define ll long long 
#define valid(x,y) x>=0 && x<n && y>=0 && y<m && \
                !vis[x][y] && grid[x][y]==startcolor
using namespace std;

int dx[]={0,1,-1,0},
    dy[]={1,0,0,-1};

int n,m,sr,sc,nc,grid[1001][1001],startcolor,ci,cj;
bool vis[1001][1001];


void flood(int pi,int pj){
    vis[pi][pj]=1;
    grid[pi][pj]=nc;
    for(int i=0;i<4;++i){
        ci=pi+dx[i],cj=pj+dy[i];
        if(valid(ci,cj))
            flood(ci,cj);
    }
}

int main(){
    cin>>n>>m>>sr>>sc>>nc;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cin>>grid[i][j];
        }
    }
    startcolor=grid[sr][sc];
    flood(sr,sc);
    for(int i=0;i<n;i++,cout<<"\n"){
        for(int j=0;j<m;j++){
            cout<<grid[i][j]<<" ";
        }
    }
}

////


/// Task5

#include <bits/stdc++.h>
#define ll long long 
using namespace std;

bool solve(int r,int k){
    if(r==1) return 0;
    return (solve(r-1,(k+1)/2)? k&1 : !(k&1));
}


int main(){
    ll n,k;
    cin>>n>>k;
    cout<<solve(n,k)<<"\n";
}

////